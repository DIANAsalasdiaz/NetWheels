{
    "contents" : "library(shiny)\n#library(shinyjs)\n\n## Note: This objects are not reloaded when the 'Reload App' button is clicked inside RStudio.\nsubtitlesStyle <- \"font-weight: bold; color: #000000;\"\n\nltys <- c(Solid = 1, Dashed = \"33\", Dotted = \"12\", `Dot-dash` = \"2393\", `Long dash` = 5, `Two dash` = 6)\n\n# Prepairing help\ntabs <- c(\"Polygons\", \"Labels\", \"Guides\", \"Legend\", \"Groups\", \"Title\", \"Net\", \"Wheel\", \"Style\", \"Tools\", \"Exporting\")\nhelpTexts <- lapply(tabs, function(tab) readLines(paste0(\"www/help\", tab, \".txt\"), warn = FALSE))\n\n## \n\nseqInputRow <- function(inputId, label, value = \"\", width) {\n  div(style = \"margin-bottom: 0;\",\n      tags$label(label, `for` = inputId), \n      tags$input(id = inputId, type = \"text\", value = value, width = width,\n                 class=\"form-control shinyjs-resettable shiny-bound-input\"))\n}\n\n\nshinyUI(fixedPage(\n  tags$head(\n    tags$style(HTML(\"\n                    hr {\n                          margin: 0;\n                    }\n                    html {\n                          overflow-y: scroll; \n                    }\n                    .nav li a {\n                          padding: 10px 10px;\n                    }\n                    \")\n    ) #overflow-y forces vertical scrollbar, avoids movement when switching from Net to Wheel\n  ),\n  shinyjs::useShinyjs(),\n  fixedPage(\n    \n  ),\n  titlePanel(\"NetWheels: Peptides Helical Wheel and Net projections maker\"),\n  fixedPage(\n    fixedRow(\n      id = \"side-panel\",\n      style = \"height: 760px;\",\n      tags$br(),\n      column(4,\n             helpText(\"Type or paste the peptide sequence on the \\\"Sequence\\\" field. Navigate the through the tabs below to adjust several configurations of the projection. Check the \\\"Help\\\" tag above the image for detailed instructions.\"),\n             #\n             seqInputRow(inputId = \"seq\", label = \"Sequence\", value = \"DLISGLGQRNVXKVLTETGLP\", #DLISGIGRVXKVLTTGLP\n                       width = \"100%\"),#, style = \"margin-bottom: 0px;\"),\n             #textInput(inputId = \"seq\", label = \"Sequence\", value = \"DLISGLGQRNVXKVLTETGLP\", width = \"100%\"),\n             uiOutput(\"resCount\"),\n             uiOutput(\"seqMono\"),\n             #uiOutput(\"resNumber\"),\n             #            numericInput(inputId = \"wheelsize\", label = \"Wheel Size (Disabled)\", \n             #                         value = 10, min = 1, max = 20, step = 0.5, width = \"100%\"),\n             #            fixedRow(\n             #              column(12, # Deixando a column caso apareÃ§a algum botao para colocar do lado\n             #                     actionButton(\"reset_input\", \"Reset ALL inputs to default values\")\n             #              )\n             #           ),\n             tags$div(id = \"settings\",\n                      tabsetPanel(\n                        tabPanel(\"Polygons\",\n                                 tabsetPanel(\n                                   tabPanel(\"Shape\",\n                                            fixedRow(\n                                              column(6,\n                                                     selectInput(inputId = \"shp1\", label = \"Polar / Basic\",\n                                                                 choices = c(\"Circle\", \"Square\", \"Triangle\", \"Diamond\", \"Hexagon\"), selected = \"Circle\")\n                                              ),\n                                              column(6,\n                                                     selectInput(inputId = \"shp2\", label = \"Polar / Acidic\",\n                                                                 choices = c(\"Circle\", \"Square\", \"Triangle\", \"Diamond\", \"Hexagon\"), selected = \"Circle\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     selectInput(inputId = \"shp3\", label = \"Polar / Uncharged\",\n                                                                 choices = c(\"Circle\", \"Square\", \"Triangle\", \"Diamond\", \"Hexagon\"), selected = \"Circle\")\n                                              ),\n                                              column(6,\n                                                     selectInput(inputId = \"shp4\", label = \"Nonpolar (Hydrophobic)\",\n                                                                 choices = c(\"Circle\", \"Square\", \"Triangle\", \"Diamond\", \"Hexagon\"), selected = \"Circle\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     selectInput(inputId = \"shp5\", label = \"Unknown Residue\",\n                                                                 choices = c(\"Circle\", \"Square\", \"Triangle\", \"Diamond\", \"Hexagon\"), selected = \"Circle\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     numericInput(inputId = \"circprop\", label = \"Min/Max Ratio\", \n                                                                  value = 1, min = 0.1, max = 1, step = 0.05)\n                                              ),\n                                              column(6,\n                                                     numericInput(inputId = \"circsize\", label = \"Size\", \n                                                                  value = 0.3, min = 0.1, max = 1, step = 0.01)\n                                              )\n                                            )\n                                   ),\n                                   tabPanel(\"Colors\",\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"col1\", label = \"Polar / Basic\", value = \"red\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"col2\", label = \"Polar / Acidic\", value = \"blue\")\n                                              )),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"col3\", label = \"Polar / Uncharged\", value = \"green\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"col4\", label = \"Nonpolar (Hydrophobic)\", value = \"yellow\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"col5\", label = \"Unknown Residue\",\n                                                                          value = \"white\")\n                                              )\n                                            )\n                                   ),\n                                   tabPanel(\"Pattern\",\n                                            helpText(\"These are available only for circles. There's no reason to mix grids and different polygons.\"),\n                                            helpText(\"n = none, v = vertical, h = horizontal, d = diagonals\"),\n                                            fixedRow(\n                                              column(3,\n                                                     selectInput(inputId = \"fill1\", label = \"Basic\",\n                                                                 choices = c(\"n\", \"v\", \"h\", \"d/\", \"d\\\\\"), selected = \"n\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"nFills1\", label = \"Lines\",\n                                                                  value = 3, min = 1, max = 21, step = 2)\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"fillCol1\", label = \"Line Color\", value = \"gray30\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(3,\n                                                     selectInput(inputId = \"fill2\", label = \"Acidic\",\n                                                                 choices = c(\"n\", \"v\", \"h\", \"d/\", \"d\\\\\"), selected = \"n\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"nFills2\", label = \"Lines\",\n                                                                  value = 3, min = 1, max = 21, step = 2)\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"fillCol2\", label = \"Line Color\", value = \"gray30\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(3,\n                                                     selectInput(inputId = \"fill3\", label = \"Uncharged\",\n                                                                 choices = c(\"n\", \"v\", \"h\", \"d/\", \"d\\\\\"), selected = \"n\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"nFills3\", label = \"Lines\",\n                                                                  value = 3, min = 1, max = 21, step = 2)\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"fillCol3\", label = \"Line Color\", value = \"gray30\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(3,\n                                                     selectInput(inputId = \"fill4\", label = \"Nonpolar\",\n                                                                 choices = c(\"n\", \"v\", \"h\", \"d/\", \"d\\\\\"), selected = \"n\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"nFills4\", label = \"Lines\",\n                                                                  value = 3, min = 1, max = 21, step = 2)\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"fillCol4\", label = \"Line Color\", value = \"gray30\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(3,\n                                                     selectInput(inputId = \"fill5\", label = \"Unknown\",\n                                                                 choices = c(\"n\", \"v\", \"h\", \"d/\", \"d\\\\\"), selected = \"n\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"nFills5\", label = \"Lines\",\n                                                                  value = 4, min = 1, max = 21, step = 2)\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"fillCol5\", label = \"Line Color\", value = \"gray30\")\n                                              )\n                                            )\n                                   ),\n                                   tabPanel(\"Borders\",\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"circBorder1\", label = \"Polar / Basic\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                              ),\n                                              column(4,\n                                                     shinyjs::colourInput(inputId = \"circBorderCol1\",\n                                                                          label = \"Color\", value = \"#000000\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"circBorderWd1\", label = \"Width\", \n                                                                  value = 1, min = 0, max = 10, step = 1)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"circBorder1\", label = \"Polar / Acidic\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                              ),\n                                              column(4,\n                                                     shinyjs::colourInput(inputId = \"circBorderCol2\",\n                                                                          label = \"Color\", value = \"#000000\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"circBorderWd2\", label = \"Width\", \n                                                                  value = 1, min = 0, max = 10, step = 1)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"circBorder3\", label = \"Polar / Uncharged\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                              ),\n                                              column(4,\n                                                     shinyjs::colourInput(inputId = \"circBorderCol3\",\n                                                                          label = \"Color\", value = \"#000000\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"circBorderWd3\", label = \"Width\", \n                                                                  value = 1, min = 0, max = 10, step = 1)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"circBorder4\", label = \"Nonpolar \",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                              ),\n                                              column(4,\n                                                     shinyjs::colourInput(inputId = \"circBorderCol4\",\n                                                                          label = \"Color\", value = \"#000000\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"circBorderWd4\", label = \"Width\", \n                                                                  value = 1, min = 0, max = 10, step = 1)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"circBorder5\", label = \"Group 5\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"Yes\")\n                                              ),\n                                              column(4,\n                                                     shinyjs::colourInput(inputId = \"circBorderCol5\",\n                                                                          label = \"Color\", value = \"#000000\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"circBorderWd5\", label = \"Width\", \n                                                                  value = 1, min = 0, max = 10, step = 1)\n                                              )\n                                            )\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Labels\",\n                                 tabsetPanel(\n                                   tabPanel(\"Amino Acids\",\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"labType\", label = \"Code Style\", \n                                                                 choices = c(`1-Letter` = 1, `3-Letter` = 2,\n                                                                             LetPos = 3, Position = 4, None = 0),\n                                                                 selected = 1)\n                                              ),\n                                              column(3, \n                                                     numericInput(inputId = \"labCex\", label = \"Font Size\", \n                                                                  value = 12, min = 1, max = 30, step = 1)\n                                              ),\n                                              column(5, #1=plain, 2=bold, 3=italic, 4=bold italic\n                                                     selectInput(inputId = \"labFont\", label = \"Font Style\", \n                                                                 choices = c(Normal = 1, Bold = 2, Italic = 3, `Bold Italic` = 4), \n                                                                 selected = 2)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4, \n                                                     numericInput(inputId = \"labOffY\", label = \"Vertical Offset\", \n                                                                  value = 0, min = -3, max = 2, step = 0.1)\n                                              ),\n                                              column(4, \n                                                     numericInput(inputId = \"labOffX\", label = \"Horizontal Offset\", \n                                                                  value = 0, min = -2, max = 2, step = 0.1)\n                                              ),\n                                              column(4, \n                                                     numericInput(inputId = \"labOffPos\", label = \"Position Offset\", \n                                                                  value = 0, min = 0, max = 10000, step = 1)\n                                              )\n                                            ),\n                                            tags$hr(),\n                                            helpText(\"Font Color\", style = subtitlesStyle),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"labCol1\", label = \"Polar / Basic\", value = \"black\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"labCol2\", label = \"Polar / Acidic\", value = \"white\")\n                                              )),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"labCol3\", label = \"Polar / Uncharged\", value = \"black\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"labCol4\", label = \"Nonpolar (Hydrophobic)\", value = \"black\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"labCol5\", label = \"Unknown Residue\", value = \"black\")\n                                              )\n                                            )\n                                   ),\n                                   tabPanel(\"Position\",\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"numShow\", label = \"Show\", \n                                                                 choices = c(\"Yes\", \"No\"), selected = \"Yes\")\n                                              ),\n                                              column(3, \n                                                     numericInput(inputId = \"numCex\", label = \"Font Size\", \n                                                                  value = 12, min = 1, max = 30, step = 1)\n                                              ),\n                                              column(5, #1=plain, 2=bold, 3=italic, 4=bold italic\n                                                     selectInput(inputId = \"numFont\", label = \"Font Style\", \n                                                                 choices = c(Normal = 1, Bold = 2, Italic = 3, `Bold Italic` = 4), \n                                                                 selected = 2)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4, \n                                                     numericInput(inputId = \"numOffY\", label = \"Vertical Offset\", \n                                                                  value = 0.3, min = -1, max = 1, step = 0.01)\n                                              ),\n                                              column(4, \n                                                     numericInput(inputId = \"numOffX\", label = \"Horizontal Offset\", \n                                                                  value = 0, min = -1, max = 1, step = 0.01)\n                                              ),\n                                              column(4, \n                                                     numericInput(inputId = \"numOffPos\", label = \"Position Offset\", \n                                                                  value = 0, min = 0, max = 10000, step = 1)\n                                              )\n                                            ),\n                                            tags$hr(),\n                                            helpText(\"Font Color\", style = subtitlesStyle),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"numCol1\", label = \"Polar / Basic\", value = \"black\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"numCol2\", label = \"Polar / Acid\", value = \"black\")\n                                              )),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"numCol3\", label = \"Polar / Uncharged\", value = \"black\")\n                                              ),\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"numCol4\", label = \"Nonpolar (Hydrophobic)\", value = \"black\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(6,\n                                                     shinyjs::colourInput(inputId = \"numCol5\", label = \"Unknown Residue\", value = \"black\")\n                                              )\n                                            )\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Guides\",\n                                 helpText(\"Wheel Guides\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(4,\n                                          selectInput(inputId = \"showWheelGuide\", label = \"Show\",\n                                                      choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                   ),\n                                   column(4,\n                                          selectInput(inputId = \"wheelGuideLty\", label = \"Line Type\",\n                                                      choices = ltys, selected = \"33\")\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"wheelGuideLwd\", label = \"Line Width\",\n                                                       value = 1, min = 0, max = 5, step = 1)\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          numericInput(inputId = \"wheelGuideCol\", label = \"Gray Level\",\n                                                       value = 0.5, min = 0, max = 1, step = 0.05)\n                                   ),\n                                   column(6,\n                                          selectInput(inputId = \"showBox\", label = \"Show Outer Box\",\n                                                      choices = c(\"Yes\", \"No\"), selected = \"Yes\")\n                                   )\n                                 ),\n                                 tags$hr(),\n                                 helpText(\"Net Guides\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(4,\n                                          selectInput(inputId = \"showNetGuide\", label = \"Show\",\n                                                      choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                   ),\n                                   column(4,\n                                          selectInput(inputId = \"netGuideLty\", label = \"Line Type\",\n                                                      choices = ltys, selected = \"33\")\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"netGuideLwd\", label = \"Line Width\",\n                                                       value = 1, min = 0, max = 5, step = 1)\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          numericInput(inputId = \"netGuideCol\", label = \"Gray Level\",\n                                                       value = 0.5, min = 0, max = 1, step = 0.05)\n                                   ),\n                                   column(6,\n                                          selectInput(inputId = \"showBoxNet\", label = \"Show Outer Box\",\n                                                      choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Legend\",\n                                 tabsetPanel(\n                                   tabPanel(\"Position and Labels\",\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"showLeg\", label = \"Show\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"Yes\")\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"legX\", label = \"Relative x\",\n                                                                  value = 0.8, min = -2, max = 2, step = 0.01)\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"legY\", label = \"Relative y\",\n                                                                  value = 0.9, min = -2, max = 2, step = 0.01)\n                                              )\n                                            ),\n                                            tags$hr(),\n                                            helpText(\"Legend Labels\", style = subtitlesStyle),\n                                            textInput(inputId = \"leg1\", label = \"Polar / Basic Legend\",\n                                                      value = \"Polar / Basic\"),\n                                            textInput(inputId = \"leg2\", label = \"Polar / Acidic Legend\",\n                                                      value = \"Polar / Acid\"),\n                                            textInput(inputId = \"leg3\", label = \"Polar / Uncharged Legend\",\n                                                      value = \"Polar / Uncharged\"),\n                                            textInput(inputId = \"leg4\", label = \"Nonpolar  Legend\",\n                                                      value = \"Nonpolar (Hydrophobic)\"),\n                                            textInput(inputId = \"leg5\", label = \"Group 5 Legend\",\n                                                      value = \"Unknown Residue\")\n                                   ),\n                                   tabPanel(\"Aesthetics\",\n                                            numericInput(inputId = \"legCex\", label = \"Font Size\",\n                                                         value = 16, min = 1, max = 30, step = 1),\n                                            tags$hr(),\n                                            helpText(\"Pattern Density (Lines)\", style = subtitlesStyle),\n                                            helpText(\"Note that these may not display correctly on the online version because of the low DPI (72). Make sure to check the exported output.\"),\n                                            fixedRow(\n                                              column(4,\n                                                     numericInput(inputId = \"legDen1\", \"Polar / Basic\",\n                                                                  value = 20, min = 1, max = 50)\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"legDen2\", \"Polar / Acidic\",\n                                                                  value = 24, min = 1, max = 50)\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"legDen3\", \"Polar / Uncharged\",\n                                                                  value = 31, min = 1, max = 50)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     numericInput(inputId = \"legDen4\", \"Nonpolar \",\n                                                                  value = 20, min = 1, max = 50)\n                                              ),\n                                              column(4,\n                                                     numericInput(inputId = \"legDen5\", \"Group 5\",\n                                                                  value = 20, min = 1, max = 50)\n                                              )\n                                            )\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Groups\",\n                                 helpText(\"Use one-letter code\"),\n                                 helpText(\"Residues main group\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(6,\n                                          textInput(inputId = \"grp1\", label = \"Polar / Basic\",\n                                                    value = \"RHK\")\n                                   ),\n                                   column(6,\n                                          textInput(inputId = \"grp2\", label = \"Polar / Acidic\",\n                                                    value = \"DE\")\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          textInput(inputId = \"grp3\", label = \"Polar / Uncharged\",\n                                                    value = \"STNQCU\")\n                                   ),\n                                   column(6,\n                                          textInput(inputId = \"grp4\", label = \"Nonpolar \",\n                                                    value = \"AGVILMFYWP\")\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          textInput(inputId = \"grp5\", label = \"Group 5\",\n                                                    value = \"X\", width = \"165px\")\n                                   ),\n                                   column(6,\n                                          actionButton(\"grpReset\", \"Reset to Default\", style = \"margin-top: 25px\")\n                                   )\n                                 ),\n                                 helpText(\"Residues interactions (Net)\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(6,\n                                          textInput(inputId = \"grpNonpolar\", label = \"Nonpolar\",\n                                                    value = \"VILMFYW\")\n                                   ),\n                                   column(6,\n                                          textInput(inputId = \"grpHydro\", label = \"Hydrogen Bond\",\n                                                    value = \"SNQ\")\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          textInput(inputId = \"grpAcid\", label = \"Acid\",\n                                                    value = \"DE\")\n                                   ),\n                                   column(6,\n                                          textInput(inputId = \"grpBasic\", label = \"Basic\",\n                                                    value = \"RHK\")\n                                   )\n                                 ),\n                                 actionButton(\"grpBondReset\", \"Reset to Default\")\n                        ),\n                        tabPanel(\"Title\",\n                                 #helpText(\"Adjust the xy postions and top-margin using the 'Wheel' or 'Net' tabs if necessary\"),\n                                 fixedRow(\n                                   column(4,\n                                          selectInput(inputId = \"showTitle\", label = \"Show\",\n                                                      choices = c(\"Yes\", \"No\"), selected = \"No\")\n                                   ),\n                                   column(4,\n                                          actionButton(inputId = \"titleSeq\", label = \"Copy from Sequence\",\n                                                       style = \"margin-top: 25px\")\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(12,\n                                          textInput(inputId = \"txTitle\", label = \"Text\",\n                                                    value = \"Title\", width = \"100%\")\n                                   )\n                                 ),\n                                 hr(),\n                                 helpText(\"Wheel Positioning\"),\n                                 fixedRow(\n                                   column(4,\n                                          numericInput(inputId = \"xTitle\", label = \"Relative x\", \n                                                       value = 0, min = -10, max = 20, step = 0.1)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"yTitle\", label = \"Relative y\", \n                                                       value = 0, min = -10, max = 20, step = 0.1)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"cexTitle\", label = \"Font Size\", \n                                                       value = 20, min = 1, max = 30, step = 1)\n                                   )\n                                 ),\n                                 hr(),\n                                 helpText(\"Net Positioning\"),\n                                 fixedRow(\n                                   column(4,\n                                          numericInput(inputId = \"xTitleNet\", label = \"Relative x\", \n                                                       value = 2.3, min = -100, max = 300, step = 0.1)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"yTitleNet\", label = \"Relative y\", \n                                                       value = 10.6, min = -100, max = Inf, step = 0.1)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"cexTitleNet\", label = \"Font Size\", \n                                                       value = 14, min = 1, max = 30, step = 1)\n                                   )\n                                 ),\n                                 actionButton(\"netAutoMar\", \"Auto Adjust Position\")\n                        ),\n                        tabPanel(\"Net\",\n                                 tabsetPanel(\n                                   tabPanel(\"General\",\n                                            fixedRow(\n                                              column(4,\n                                                     actionButton(\"alphaHelix\", \"alpha helix\")\n                                              ),\n                                              column(4,\n                                                     actionButton(\"three10Helix\", \"3_10 helix\")\n                                              ),\n                                              column(4,\n                                                     actionButton(\"piHelix\", \"pi helix\")\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     numericInput(\"netPerTurn\", \"Res. per turn\",\n                                                                  value=3.6, min=2, max=8.0, step=0.01)\n                                              ),\n                                              column(4,\n                                                     selectInput(inputId = \"netDirection\", label = \"Direction\",\n                                                                 choices = c(`Right-Left` = 1, `Left-Right` = -1),\n                                                                 selected = 1)\n                                              ),\n                                              column(4,\n                                                     numericInput(\"netStartOff\", \"Start Offset\",\n                                                                  value=0, min=0, max=10, step=0.05)\n                                              )\n                                            ),\n                                            #                                             fixedRow(\n                                            #                                               column(4,\n                                            #                                                      numericInput(\"netDiameter\", \"Diameter (Ã)\",\n                                            #                                                                   value=4.6, min=3.0, max=6.0, step=0.1)\n                                            #                                                      ),\n                                            #                                               column(3,\n                                            #                                                      numericInput(\"netPitch\", \"Pitch (Ã)\",\n                                            #                                                                   value=5.4, min=4.5, max=6.5, step=0.01)\n                                            #                                               ),\n                                            #                                               column(5,\n                                            #                                                      numericInput(\"netTrans\", \"Translations (Ã)\",\n                                            #                                                                   value=1.5, min=1.0, max=2.5, step=0.01)\n                                            #                                               )\n                                            #                                             ),\n                                            fixedRow(\n                                              column(6,\n                                                     numericInput(\"netPadTop\", \"Padding Top\",\n                                                                  value = 0, min = 0, max = 3, step = 0.05)\n                                              ),\n                                              column(6,\n                                                     numericInput(\"netPadBot\", \"Padding Bottom\",\n                                                                  value = 0, min = 0, max = 1, step = 0.01)\n                                              )\n                                            ),\n                                            fixedRow(\n                                              column(4,\n                                                     numericInput(\"netPadL\", \"Padding Left\",\n                                                                  value = 0.1, min = 0, max = 1, step = 0.01)\n                                              ),\n                                              column(4,\n                                                     numericInput(\"netPadR\", \"Padding Right\",\n                                                                  value = 0.1, min = 0, max = 1, step = 0.01)\n                                              ),\n                                              column(4,\n                                                     selectInput(inputId = \"netShowLimits\", label = \"Show Border\",\n                                                                 choices = c(\"Yes\", \"No\"), selected = \"Yes\")\n                                              )\n                                            ),\n                                            helpText(\"Change this to make the polygons proportional and adjust the figre size, if necessary:\"), \n                                            fixedRow(column(6,\n                                                            numericInput(\"netProp\", \"Proportion Factor\",\n                                                                         value = 2.8, min = 0.05, max = 10, step = 0.05)\n                                                            ),\n                                                     column(6,\n                                                            numericInput(\"netWidth\", \"Figure Extra Width\",\n                                                                         value = 240, min = 0, max = 500, step = 5)\n                                                            ))\n                                            \n                                   ),\n                                   tabPanel(\"Interactions\",\n                                            selectInput(inputId = \"netShowInteractions\", label = \"Show Interactions\",\n                                                        choices = c(\"Yes\", \"No\"), selected = \"Yes\"),\n                                            helpText(\"Nonpolar interactions\"),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"bond1Ty\", label = \"Type\",\n                                                                 choices = ltys, selected = 1)\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"bond1Wd\", label = \"Width\",\n                                                                  value = 3, min = 0, max = 10, step = 1)\n                                              ),\n                                              column(5,\n                                                     shinyjs::colourInput(inputId = \"bond1Col\", label = \"Color\",\n                                                                          value = \"black\")\n                                              )\n                                            ),\n                                            helpText(\"Acid-base interactions\"),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"bond2Ty\", label = \"Type\",\n                                                                 choices = ltys, selected = \"33\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"bond2Wd\", label = \"Width\",\n                                                                  value = 3, min = 0, max = 10, step = 1)\n                                              ),\n                                              column(5,\n                                                     shinyjs::colourInput(inputId = \"bond2Col\", label = \"Color\",\n                                                                          value = \"black\")\n                                              )\n                                            ),\n                                            helpText(\"Hydrogen bonds\"),\n                                            fixedRow(\n                                              column(4,\n                                                     selectInput(inputId = \"bond3Ty\", label = \"Type\",\n                                                                 choices = ltys, selected = \"12\")\n                                              ),\n                                              column(3,\n                                                     numericInput(inputId = \"bond3Wd\", label = \"Width\",\n                                                                  value = 3, min = 0, max = 10, step = 1)\n                                              ),\n                                              column(5,\n                                                     shinyjs::colourInput(inputId = \"bond3Col\", label = \"Color\",\n                                                                          value = \"black\")\n                                              )\n                                            )\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Wheel\",\n                                 helpText(\"Connection Lines\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(4,\n                                          numericInput(inputId = \"conLineWd\", label = \"Width\", \n                                                       value = 6, min = 0, max = 20, step = 1)\n                                   ),\n                                   column(4, \n                                          numericInput(inputId = \"maxlinegray\", label = \"Max Gray\", \n                                                       value = 0.7, min = 0, max = 1, step = 0.01)\n                                   ),\n                                   column(4, \n                                          numericInput(inputId = \"minlinegray\", label = \"Min Gray\", \n                                                       value = 0.1, min = 0, max = 1, step = 0.01)\n                                   )\n                                 ),\n                                 tags$hr(),\n                                 helpText(\"Wheel Properties\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(6,\n                                          numericInput(inputId = \"innRatio\", label = \"Spiral Factor\", \n                                                       value = 0, min = 0, max = 1, step = 0.01)\n                                   ),\n                                   column(6,\n                                          numericInput(inputId = \"nestRatio\", label = \"Nesting Factor\", \n                                                       value = 0.5, min = 0, max = 2, step = 0.01)\n                                   )\n                                 ),\n                                 fixedRow(\n                                   column(6,\n                                          selectInput(inputId = \"direction\", label = \"Direction\", \n                                                      choices = c(\"Clockwise\", \"Counterclockwise\"),\n                                                      selected = \"Clockwise\")\n                                   ),\n                                   column(3,\n                                          numericInput(inputId = \"period\", label = \"Period\", \n                                                       value = 18, min = 5, max = 30, step = 1)\n                                   ),\n                                   column(3,\n                                          numericInput(inputId = \"perStep\", label = \"Step\", \n                                                       value = 4, min = 1, max = 10, step = 1)\n                                   )\n                                 ),\n                                 helpText(\"Figure Size\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(4,\n                                          numericInput(inputId = \"figWd\", label = \"Figure Width\",\n                                                       value = 775, min = 400, max = 1000, step = 5)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"marR\", label = \"Padding-Right\",\n                                                       value = 12, min = 0, max = 30, step = 0.1)\n                                   ),\n                                   column(4,\n                                          numericInput(inputId = \"marT\", label = \"Padding-Top\",\n                                                       value = 0, min = 0, max = 10, step = 0.1)\n                                   )\n                                 ),\n                                 helpText(\"Use Width = 600 and Padding = 0 for a square image without legend.\")\n                        ),\n                        tabPanel(\"Styles\",\n                                 helpText(\"Some pre-defined styling actions\"),\n                                 helpText(\"Residues Representation\", style = subtitlesStyle),\n                                 helpText(\"Colors\"),\n                                 fixedRow(\n                                   column(3,\n                                          actionButton(\"reset_input2\", \"Default\")\n                                   ),\n                                   column(3,\n                                          actionButton(\"style_terrain\", \"Terrain\")\n                                   ),\n                                   column(3,\n                                          actionButton(\"style_bw\", \"B & W\")\n                                   ),\n                                   column(3,\n                                          actionButton(\"style_gray\", \"Grayscale\")\n                                   )\n                                 ),\n                                 helpText(\"Shapes\"),\n                                 fixedRow(\n                                   column(3,\n                                          actionButton(\"style_circle\", \"Circles\")\n                                   ),\n                                   column(3,\n                                          actionButton(\"style_squares\", \"Squares\")\n                                   ),\n                                   column(2,\n                                          actionButton(\"style_shapes\", \"All\")\n                                   ),\n                                   column(4,\n                                          actionButton(\"style_pattern\", \"Circle Pattern\")\n                                   )\n                                 ),\n                                 actionButton(\"style_labdown\", \"Switch Label Style\"),\n                                 helpText(\"Wheel\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(6,\n                                          actionButton(\"style_legend\", \"Toggle Wheel Legend\")\n                                   ),\n                                   column(6,\n                                          actionButton(\"style_round\", \"Toggle Spiral\")\n                                   )\n                                 ),\n                                 helpText(\"Net\", style = subtitlesStyle),\n                                 fixedRow(\n                                   column(4,\n                                          actionButton(\"style_netLeg0\", \"No Legend\")\n                                   ),\n                                   column(4,\n                                          actionButton(\"style_netLeg1\", \"Legend Above\")\n                                   ),\n                                   column(4,\n                                          actionButton(\"style_netLeg2\", \"Legend Beside\")\n                                   )\n                                 )\n                        ),\n                        tabPanel(\"Tools\",\n                                 tags$br(),\n                                 downloadButton(\"bt_export\", \"Export Settings\"),\n                                 #actionButton(\"bt_rdata\", \"Save RData\"),\n                                 #actionButton(\"bt_rdataload\", \"Load RData\"),\n                                 tags$br(),\n                                 tags$br(),\n                                 fileInput(\"fileImport\", \"Import Style File\",\n                                           accept=c(\".hws\")),\n                                 tags$script('\n        Shiny.addCustomMessageHandler(\"resetFileInputHandler\", function(x) {   \n          var el = $(\"#\" + x);\n          el.replaceWith(el = el.clone(true));\n          //var id = \"#\" + x + \"_progress\";     \n          //$(id).css(\"visibility\", \"hidden\");\n        });\n      ')\n                                 #actionButton(\"do_import\", \"Activate Import\")\n                        ),\n                        tabPanel(\"Export\",\n                                 helpText(\"Export Options\", style = subtitlesStyle),\n                                 selectInput(inputId = \"expFormat\", label = \"Format\",\n                                             choices = c(\"PNG\", \"TIFF (lzw)\", \"PDF\", \"JPG\"), selected = \"PNG\"),\n                                 selectInput(inputId = \"expDPI\", label = \"DPI\",\n                                             choices = c(72, 150, 300, 600), selected = \"72\"),\n                                 fixedRow(\n                                   column(6,\n                                          downloadButton(\"plotDown\", \"Export Wheel\")),\n                                   column(6,\n                                          downloadButton(\"plotDownNet\", \"Export Net\")\n                                   )\n                                 )\n                        )\n                      )\n             )\n      ),\n      column(8,\n             tabsetPanel(\n               tabPanel(\"Net\",\n                        checkboxInput(\"autoNet\", \"Automatic Preview\", value = FALSE),\n                        plotOutput(outputId = \"netPlot\", \n                                   height = \"600px\", width = \"300px\")\n               ),\n               tabPanel(\"Wheel\",\n                        checkboxInput(\"autoWheel\", \"Automatic Preview\", value = FALSE),\n                        #conditionalPanel(condition = \"input.autoWheel == true\",\n                        plotOutput(outputId = \"helicalPlot\", height = \"600px\", width = \"600px\")#,\n#                         tags$hr(),\n#                         helpText(\"Export Options\", style = subtitlesStyle),\n#                         fixedRow(\n#                           column(4,\n#                                  selectInput(inputId = \"expFormat\", label = \"Format\",\n#                                              choices = c(\"PNG\", \"TIFF (lzw)\", \"PDF\", \"JPG\"), selected = \"PNG\")\n#                           ),\n#                           column(4,\n#                                  selectInput(inputId = \"expDPI\", label = \"DPI\",\n#                                              choices = c(72, 150, 300, 600), selected = \"72\")\n#                           ),\n#                           column(4,\n#                                  downloadButton(\"plotDown\", \"Save Image\")\n#                           ),\n#                           tags$style(type='text/css', \"#plotDown { margin-top: 25px;}\")\n#                         )\n                        #)\n               ),\n               tabPanel(\"About\",\n                        tags$br(),\n                        tags$p(\"Developed by Alan R. MÃ³l, Wagner Fontes, Mariana S. Castro, Universidade de BrasÃ­lia - Brazil\"),\n                        tags$p(\"To-do list:\"),\n                        tags$ul(tags$li(\"Enable polygon size based on physical properties of the residues, like originally used by Dunnill (1968)\"),\n                                tags$li(\"Add legend-support for different shapes. Currently, only colors and patterns are considered.\")\n                        ),\n                        tags$p(\"This application is available free of charge. If you would like to cite it, please use the following reference:\"),\n                        tags$ul(tags$li(\"MÃ³l, A. R, Castro, M, S. Fontes, W. NetWheels: A web application to create high quality peptide helical wheel and net projections. ... 2016\"))\n               ),\n               tabPanel(\"Help\",\n                        tags$br(),\n                        tags$p(\"For quick examples of styles and also one-click changes, check the 'Styles' tab. Advanced ajustments, as well as other features, are available using the other tabs, explained below:\"),\n                        # The tabs are created in the do.call call, to avoid repeating the expression\n                        do.call(tabsetPanel, lapply(seq_along(tabs), function(hT) {\n                          tabPanel(tabs[hT],\n                                   tags$br(),\n                                   # Each line from the .txt file is transformed into a p tag. \n                                   lapply(seq_along(helpTexts[[hT]]), function(h) tags$p(helpTexts[[hT]][h], style=\"text-indent: 50px;\"))\n                          )\n                        }))\n               )\n             )\n      )\n    ),\n    tags$br(),\n    tags$br(),\n    tags$br(),\n    tags$br(),\n    tags$div(\n      tags$footer(\"Developed by Alan R. MÃ³l, Wagner Fontes, Mariana S. Castro, Universidade de BrasÃ­lia - Brazil\")\n    )\n  )\n  \n)\n)\n",
    "created" : 1455112794624.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2180096441",
    "id" : "8B20FCEC",
    "lastKnownWriteTime" : 1455157018,
    "path" : "C:/Users/Alan/Google Drive/R/Shiny/HelicalWheel/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}